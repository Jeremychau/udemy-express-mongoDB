{"version":3,"file":"static/js/319.431f41a6.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.jsx","shared/components/FormElements/Input.jsx","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.jsx","shared/hooks/form-hook.jsx","apiConfig.js","shared/hooks/http-hook.js","user/pages/Auth.jsx","util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport Button from \"./Button\"\n\nimport './ImageUpload.css'\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [perviewUrl, setPerviewUrl] = useState();\n    const [isValid, setIsValid] = useState();\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if(!file) return\n        const fileReader = new FileReader();\n        fileReader.onload = () => setPerviewUrl(fileReader.result);\n        fileReader.readAsDataURL(file);\n    }, [file]);\n\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileisValid;\n\n        if(event.target.files && event.target.files.length > 0){\n            [pickedFile] = event.target.files;\n            setFile(pickedFile);\n            setIsValid(true);\n            fileisValid = true;\n        }else{\n            setIsValid(false)\n            fileisValid = false\n        }\n        props.onInput(props.id, pickedFile, fileisValid)\n        return;\n    };\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click()\n    };\n\n    return (\n      <div className=\"form-control\">\n          <input id={props.id} ref={filePickerRef} style={{display:'none'}} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler} />\n          <div className={`image-upload ${props.center && 'center'}`}>\n            <div className=\"image-upload__preview\">\n                {perviewUrl && <img src={perviewUrl} alt=\"Preview\" /> }\n                {!perviewUrl && <p>Please pick an image.</p> }\n            </div>\n            <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\n          </div>\n          {!isValid && <p>{props.errorText}</p>}\n      </div>\n    )\n};\n\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react'\n\nimport { validate } from '../../../util/validators';\nimport './Input.css'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.content,\n                isValid: validate(action.content, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state\n    }\n}\n\nconst Input = props => {\n    const initialState = {value: props.value || '', isTouched: false, isValid: props.valid || false}\n    const [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', content: event.target.value, validators: props.validators});\n    }\n\n    const {id, onInput} = props;\n    const {value, isValid} = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n\n    const element = props.element === 'input' ? (\n        <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/>\n    ) : (\n        <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/>\n    );\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id} >{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n}\n\nexport default Input","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className? props.className : ''}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport Backdrop from './Backdrop'\n\nimport './Modal.css'\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n            </form>\n            <footer className={`modal__footer ${props.footerClass}`}>\n                {props.footer}\n            </footer>\n        </div>\n    )\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n}\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n        {props.show && <Backdrop onClick={props.onCancel} />}\n        <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n            <ModalOverlay {...props} />\n        </CSSTransition>\n    </React.Fragment>\n  )\n}\n\nexport default Modal","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n\n            for (const inputId in state.inputs) {\n                if(!state.inputs[inputId]) continue;\n\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                }else{\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs:{\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid}\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            break;\n    }\n}\n\nexport const useForm = (inputs, formValidity) => {\n    const [formState, dispatch] = useReducer( formReducer, {inputs, formValidity});\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id})\n    }, []);\n\n    const setFormData = useCallback( (inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, [])\n\n    return [formState, inputHandler, setFormData]\n}","import axios from 'axios';\n\nconst userItem = JSON.parse(localStorage.getItem('userData'));\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_PATH\n});\n\ninstance.defaults.headers.common['Authorization'] = (userItem)? `Bearer ${userItem.token}` : ''\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport default instance;","// import { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useState, useCallback } from \"react\";\nimport api from \"../../apiConfig\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendReq = useCallback( async (url, method = 'get', body = null) => {\n        setIsLoading(true)\n        try {\n            let result = await api[method](url, body);\n            if(!result) throw new Error(result.message)\n            setIsLoading(false)\n            return result.data\n        } catch (err) {\n            setError(err.message || 'Something Error');\n            setIsLoading(false)\n            throw err\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null)\n    }\n\n    // useEffect(() => {\n    //     return () => {\n    //         activeHttpRequests.current.map(abortCtrl => {abortCtrl.abort()} )\n    //     };\n    // }, [])\n\n    return { isLoading, error, setError, sendReq, clearError }\n}","import React, {useState, useContext} from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from  \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\n// import api from \"../../apiConfig\";\n\nimport { AuthContext } from \"../../shared/context/auth-context\"\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE, VALIDATOR_EMAIL } from \"../../util/validators\";\n\nimport './Auth.css'\n\nconst Auth = () => {\n    const authFormValue = {\n        email: { value: '', isValid: false },\n        password: { value: '', isValid: false}\n    }\n\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const [formState, inputHandler, setFormData] = useForm(authFormValue, false)\n    const { isLoading, error, setError, sendReq } = useHttpClient();\n\n    const submitFormHandler = async (event) => {\n        event.preventDefault();\n        let result;\n\n        if(isLoginMode) {\n            try {\n                result = await sendReq('/users/login', 'post', {\n                    email: formState.inputs.email.value,\n                    password: formState.inputs.password.value,\n                })\n                if(result) auth.login(result.user, result.token);\n            } catch (err) {\n             console.log(err);\n            }\n        } else {\n            try {\n                const formData = new FormData();\n                formData.append('name', formState.inputs.name.value)\n                formData.append('email', formState.inputs.email.value)\n                formData.append('password', formState.inputs.password.value)\n                formData.append('image', formState.inputs.image.value)\n                result = await sendReq(`/users/signup`, 'post', formData)\n                if(result) console.log('ok');\n            } catch (error) {\n                setError(error.data.message || 'Something Error');\n            }\n        }\n    }\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) { //sign in\n            setFormData( {\n                ...formState.inputs,\n                name: undefined,\n                image: undefined\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid )\n        } else { // login\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: {\n                        value: '',\n                        isValid: false\n                    },\n                    image: {\n                        value: null,\n                        isValid: false\n                    }\n                },\n                false\n            )\n        }\n        setIsLoginMode(isLoginMode => !isLoginMode)\n    }\n\n    const pageAction = (!isLoginMode)? 'Signup' : 'Login'\n\n    const errorHandler = () => {\n        setError(null)\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler} />\n            <Card ClassName=\"authentication\" onSumnit={submitFormHandler} >\n                { isLoading && <LoadingSpinner asOverlay /> }\n                <h2>{pageAction} Required</h2>\n                <hr/>\n                <form>\n                    {!isLoginMode && <Input element=\"input\" type=\"text\" label=\"Your Name\" id=\"name\" onInput={inputHandler} validators={[VALIDATOR_REQUIRE()]} errorText=\"Please input Name\" />}\n                    {!isLoginMode &&\n                        <ImageUpload id=\"image\" center={true} onInput={inputHandler} errorText=\"Please upload JPG file.\" />\n                    }\n                    <Input element=\"input\" type=\"email\" label=\"E-mail\" id=\"email\" onInput={inputHandler} validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]} errorText=\"Please input Email\" />\n                    <Input element=\"input\" type=\"password\" label=\"Password\" id=\"password\" onInput={inputHandler} validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(4)]} errorText=\"Please input at least 4 chr\" />\n                    <Button type=\"submit\" onClick={submitFormHandler} disabled={!formState.isValid} >{pageAction}</Button>\n                </form>\n                    <Button inverse onClick={switchModeHandler} >Switch To {(isLoginMode)? 'Signup' : 'Login'} </Button>\n            </Card>\n        </React.Fragment>\n    )\n};\n\nexport default Auth;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","useState","file","setFile","perviewUrl","setPerviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileisValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","content","validate","validators","isTouched","initialState","valid","useReducer","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","children","onCancel","onClear","header","show","error","footer","ModalOverlay","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","formValidity","formState","inputHandler","useCallback","setFormData","inputData","userItem","JSON","parse","localStorage","getItem","instance","axios","baseURL","process","defaults","headers","common","token","useHttpClient","isLoading","setIsLoading","setError","sendReq","url","method","body","api","Error","message","data","clearError","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","submitFormHandler","login","user","console","log","formData","FormData","append","name","image","pageAction","ErrorModal","Card","ClassName","onSumnit","LoadingSpinner","asOverlay","Input","VALIDATOR_REQUIRE","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","inverse","undefined","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","val","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}