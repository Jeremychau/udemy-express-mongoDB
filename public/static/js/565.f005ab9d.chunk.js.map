{"version":3,"file":"static/js/565.f005ab9d.chunk.js","mappings":"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","sources":["places/pages/NewPlace.jsx","shared/components/FormElements/ImageUpload.jsx","shared/components/FormElements/Input.jsx","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.jsx","shared/hooks/form-hook.jsx","apiConfig.js","shared/hooks/http-hook.js","util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, {useContext} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n    const auth = useContext(AuthContext);\n    const {isLoading, error, sendReq, clearError } = useHttpClient();\n\n    const [formState, inputHandler] = useForm(\n        {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            },\n            address: {\n                value: '',\n                isValid: false\n            },\n            image: {\n                value: null,\n                isValid: false\n            }\n        }, false\n    )\n\n    const history = useHistory()\n\n    const placeSubmitHandler = async (event) => {\n        event.preventDefault();\n        try {\n            console.log(auth.token);\n            const formData = new FormData();\n            formData.append('title', formState.inputs.title.value)\n            formData.append('description', formState.inputs.description.value)\n            formData.append('address', formState.inputs.address.value)\n            // formData.append('creator', auth.userId)\n            formData.append('image', formState.inputs.image.value)\n            let result = await sendReq('/places', 'post', formData, auth.token)\n            if(result) history.push('/');\n        } catch (err) {}\n    }\n\n\treturn (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n                {isLoading && <LoadingSpinner asOverlay/>}\n                <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter valid Title\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"description\"\n                    element=\"input\"\n                    type=\"textarea\"\n                    label=\"Description\"\n                    validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter valid Description (at least 5 characters)\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"address\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Address\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter valid Address\"\n                    onInput={inputHandler}\n                />\n                <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide image for place\" />\n                <Button type=\"submit\" disabled={!formState.isValid} >\n                    Add Place\n                </Button>\n            </form>\n        </React.Fragment>\n\t);\n};\n\nexport default NewPlace;\n","import React, {useRef, useState, useEffect} from \"react\";\nimport Button from \"./Button\"\n\nimport './ImageUpload.css'\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [perviewUrl, setPerviewUrl] = useState();\n    const [isValid, setIsValid] = useState();\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if(!file) return\n        const fileReader = new FileReader();\n        fileReader.onload = () => setPerviewUrl(fileReader.result);\n        fileReader.readAsDataURL(file);\n    }, [file]);\n\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileisValid;\n\n        if(event.target.files && event.target.files.length > 0){\n            [pickedFile] = event.target.files;\n            setFile(pickedFile);\n            setIsValid(true);\n            fileisValid = true;\n        }else{\n            setIsValid(false)\n            fileisValid = false\n        }\n        props.onInput(props.id, pickedFile, fileisValid)\n        return;\n    };\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click()\n    };\n\n    return (\n      <div className=\"form-control\">\n          <input id={props.id} ref={filePickerRef} style={{display:'none'}} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler} />\n          <div className={`image-upload ${props.center && 'center'}`}>\n            <div className=\"image-upload__preview\">\n                {perviewUrl && <img src={perviewUrl} alt=\"Preview\" /> }\n                {!perviewUrl && <p>Please pick an image.</p> }\n            </div>\n            <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\n          </div>\n          {!isValid && <p>{props.errorText}</p>}\n      </div>\n    )\n};\n\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react'\n\nimport { validate } from '../../../util/validators';\nimport './Input.css'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.content,\n                isValid: validate(action.content, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state\n    }\n}\n\nconst Input = props => {\n    const initialState = {value: props.value || '', isTouched: false, isValid: props.valid || false}\n    const [inputState, dispatch] = useReducer(inputReducer, initialState);\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', content: event.target.value, validators: props.validators});\n    }\n\n    const {id, onInput} = props;\n    const {value, isValid} = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n\n    const element = props.element === 'input' ? (\n        <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/>\n    ) : (\n        <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/>\n    );\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id} >{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n}\n\nexport default Input","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport Backdrop from './Backdrop'\n\nimport './Modal.css'\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n            </form>\n            <footer className={`modal__footer ${props.footerClass}`}>\n                {props.footer}\n            </footer>\n        </div>\n    )\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n}\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n        {props.show && <Backdrop onClick={props.onCancel} />}\n        <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n            <ModalOverlay {...props} />\n        </CSSTransition>\n    </React.Fragment>\n  )\n}\n\nexport default Modal","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n\n            for (const inputId in state.inputs) {\n                if(!state.inputs[inputId]) continue;\n\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                }else{\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs:{\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid}\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            break;\n    }\n}\n\nexport const useForm = (inputs, formValidity) => {\n    const [formState, dispatch] = useReducer( formReducer, {inputs, formValidity});\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id})\n    }, []);\n\n    const setFormData = useCallback( (inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, [])\n\n    return [formState, inputHandler, setFormData]\n}","import axios from 'axios';\n\nconst userItem = JSON.parse(localStorage.getItem('userData'));\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_PATH\n});\n\ninstance.defaults.headers.common['Authorization'] = (userItem)? `Bearer ${userItem.token}` : ''\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport default instance;","// import { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useState, useCallback } from \"react\";\nimport api from \"../../apiConfig\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendReq = useCallback( async (url, method = 'get', body = null) => {\n        setIsLoading(true)\n        try {\n            let result = await api[method](url, body);\n            if(!result) throw new Error(result.message)\n            setIsLoading(false)\n            return result.data\n        } catch (err) {\n            setError(err.message || 'Something Error');\n            setIsLoading(false)\n            throw err\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null)\n    }\n\n    // useEffect(() => {\n    //     return () => {\n    //         activeHttpRequests.current.map(abortCtrl => {abortCtrl.abort()} )\n    //     };\n    // }, [])\n\n    return { isLoading, error, setError, sendReq, clearError }\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendReq","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","console","log","token","formData","FormData","append","inputs","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","useState","file","setFile","perviewUrl","setPerviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileisValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","content","validate","isTouched","initialState","valid","useReducer","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","onCancel","header","show","footer","ModalOverlay","headerClass","contentClass","children","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","formValidity","useCallback","setFormData","inputData","userItem","JSON","parse","localStorage","getItem","instance","axios","baseURL","process","defaults","headers","common","setIsLoading","setError","url","method","body","api","Error","message","data","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","val","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}