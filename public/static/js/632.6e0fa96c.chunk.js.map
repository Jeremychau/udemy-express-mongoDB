{"version":3,"file":"static/js/632.6e0fa96c.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.jsx","apiConfig.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.jsx","user/components/UsersList.jsx","user/pages/Users.jsx"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className? props.className : ''}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport Backdrop from './Backdrop'\n\nimport './Modal.css'\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n            </form>\n            <footer className={`modal__footer ${props.footerClass}`}>\n                {props.footer}\n            </footer>\n        </div>\n    )\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n}\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n        {props.show && <Backdrop onClick={props.onCancel} />}\n        <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n            <ModalOverlay {...props} />\n        </CSSTransition>\n    </React.Fragment>\n  )\n}\n\nexport default Modal","import axios from 'axios';\n\nconst userItem = JSON.parse(localStorage.getItem('userData'));\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_PATH\n});\n\ninstance.defaults.headers.common['Authorization'] = (userItem)? `Bearer ${userItem.token}` : ''\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport default instance;","// import { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useState, useCallback } from \"react\";\nimport api from \"../../apiConfig\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendReq = useCallback( async (url, method = 'get', body = null) => {\n        setIsLoading(true)\n        try {\n            let result = await api[method](url, body);\n            if(!result) throw new Error(result.message)\n            setIsLoading(false)\n            return result.data\n        } catch (err) {\n            setError(err.message || 'Something Error');\n            setIsLoading(false)\n            throw err\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null)\n    }\n\n    // useEffect(() => {\n    //     return () => {\n    //         activeHttpRequests.current.map(abortCtrl => {abortCtrl.abort()} )\n    //     };\n    // }, [])\n\n    return { isLoading, error, setError, sendReq, clearError }\n}","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Acatar from '../../shared/components/UIElements/Avatar'\nimport Card from '../../shared/components/UIElements/Card'\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n  return (\n      <li className='user-item'>\n            <Card className='user-item__content'>\n                <Link to={`/${props.user._id}/places`}>\n                    <div className='user-item__image'>\n                        <Acatar image={`${process.env.REACT_APP_ASSET_URL_PATH + props.image}`} alt={props.name} />\n                    </div>\n                    <div className='user-item__info'>\n                        <h2>{props.name}</h2>\n                        <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'} </h3>\n                    </div>\n                </Link>\n            </Card>\n      </li>\n  )\n}\n\nexport default UserItem","import React from 'react'\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card'\nimport './UsersList.css';\n\nconst UsersList = (props) => {\n    if(props.items.length === 0) {\n    return <div className='center' >\n        <h2>No Users Found.</h2>\n    </div>\n    }\n\n    return (\n        <Card>\n            <ul className=\"users-list\">\n                {\n                    props.items.map( (user, index) => {\n                        return <UserItem key={index} user={user} id={user.id} image={user.image} name={user.name} placeCount={user.places.length} />\n                    })\n                }\n            </ul>\n        </Card>\n    )\n}\n\nexport default UsersList\n","import React, { useEffect, useState } from 'react'\n\nimport UsersList from '../components/UsersList'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n// import api from \"../../apiConfig\";\n\nconst Users = () => {\n    const [loadedUsers, setLoadedUsers] = useState([])\n\n    const { isLoading, error, setError, sendReq } = useHttpClient();\n\n    useEffect(() => {\n        const getUser = async() => {\n            try {\n                let result = await sendReq('/users', 'get', '')\n                setLoadedUsers(result)\n            } catch (err) {\n                setError(err.message || 'Something Error');\n            }\n        }\n        getUser()\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={ () => setError(null)} />\n            { isLoading && <div className='center'>\n                <LoadingSpinner/>\n            </div> }\n            { !isLoading && loadedUsers && <UsersList items={loadedUsers} /> }\n        </React.Fragment>\n    )\n}\n\nexport default Users\n"],"names":["props","className","style","children","onCancel","onClear","header","show","error","footer","onClick","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","userItem","JSON","parse","localStorage","getItem","instance","axios","baseURL","process","defaults","headers","common","token","useHttpClient","useState","isLoading","setIsLoading","setError","sendReq","useCallback","url","method","body","api","result","Error","message","data","clearError","src","image","alt","width","height","Card","to","user","_id","name","placeCount","items","length","map","index","id","places","loadedUsers","setLoadedUsers","useEffect","getUser","ErrorModal","LoadingSpinner"],"sourceRoot":""}